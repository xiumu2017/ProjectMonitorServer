<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.paradise.core.mapper.PmProjectMapper">
  <resultMap id="BaseResultMap" type="com.paradise.core.model.PmProject">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="service_url" jdbcType="VARCHAR" property="serviceUrl" />
    <result column="importance" jdbcType="INTEGER" property="importance" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="status_code" jdbcType="INTEGER" property="statusCode" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="company_id" jdbcType="BIGINT" property="companyId" />
    <result column="max_alert" jdbcType="INTEGER" property="maxAlert" />
    <result column="error_count" jdbcType="INTEGER" property="errorCount" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="project_info_link" jdbcType="VARCHAR" property="projectInfoLink" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_name, service_url, importance, username, `password`, status_code, `status`, 
    `type`, company_id, max_alert, error_count, start_time, end_time, remark, project_info_link, 
    create_at, update_at, create_by, update_by
  </sql>
  <select id="selectByExample" parameterType="com.paradise.core.example.PmProjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pm_project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from pm_project
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pm_project
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from pm_project
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from pm_project
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.paradise.core.example.PmProjectExample">
    delete from pm_project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.paradise.core.model.PmProject">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pm_project (project_name, service_url, importance, 
      username, `password`, status_code, 
      `status`, `type`, company_id, 
      max_alert, error_count, start_time, 
      end_time, remark, project_info_link, 
      create_at, update_at, create_by, 
      update_by)
    values (#{projectName,jdbcType=VARCHAR}, #{serviceUrl,jdbcType=VARCHAR}, #{importance,jdbcType=INTEGER}, 
      #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{statusCode,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}, #{companyId,jdbcType=BIGINT}, 
      #{maxAlert,jdbcType=INTEGER}, #{errorCount,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{projectInfoLink,jdbcType=VARCHAR}, 
      #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP}, #{createBy,jdbcType=BIGINT}, 
      #{updateBy,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="map">
    <selectKey keyProperty="record.id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pm_project
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.projectName != null">
            project_name,
          </if>
          <if test="record.serviceUrl != null">
            service_url,
          </if>
          <if test="record.importance != null">
            importance,
          </if>
          <if test="record.username != null">
            username,
          </if>
          <if test="record.password != null">
            `password`,
          </if>
          <if test="record.statusCode != null">
            status_code,
          </if>
          <if test="record.status != null">
            `status`,
          </if>
          <if test="record.type != null">
            `type`,
          </if>
          <if test="record.companyId != null">
            company_id,
          </if>
          <if test="record.maxAlert != null">
            max_alert,
          </if>
          <if test="record.errorCount != null">
            error_count,
          </if>
          <if test="record.startTime != null">
            start_time,
          </if>
          <if test="record.endTime != null">
            end_time,
          </if>
          <if test="record.remark != null">
            remark,
          </if>
          <if test="record.projectInfoLink != null">
            project_info_link,
          </if>
          <if test="record.createAt != null">
            create_at,
          </if>
          <if test="record.updateAt != null">
            update_at,
          </if>
          <if test="record.createBy != null">
            create_by,
          </if>
          <if test="record.updateBy != null">
            update_by,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.projectName != null">
            #{record.projectName,jdbcType=VARCHAR},
          </if>
          <if test="record.serviceUrl != null">
            #{record.serviceUrl,jdbcType=VARCHAR},
          </if>
          <if test="record.importance != null">
            #{record.importance,jdbcType=INTEGER},
          </if>
          <if test="record.username != null">
            #{record.username,jdbcType=VARCHAR},
          </if>
          <if test="record.password != null">
            #{record.password,jdbcType=VARCHAR},
          </if>
          <if test="record.statusCode != null">
            #{record.statusCode,jdbcType=INTEGER},
          </if>
          <if test="record.status != null">
            #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.type != null">
            #{record.type,jdbcType=VARCHAR},
          </if>
          <if test="record.companyId != null">
            #{record.companyId,jdbcType=BIGINT},
          </if>
          <if test="record.maxAlert != null">
            #{record.maxAlert,jdbcType=INTEGER},
          </if>
          <if test="record.errorCount != null">
            #{record.errorCount,jdbcType=INTEGER},
          </if>
          <if test="record.startTime != null">
            #{record.startTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.endTime != null">
            #{record.endTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.remark != null">
            #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.projectInfoLink != null">
            #{record.projectInfoLink,jdbcType=VARCHAR},
          </if>
          <if test="record.createAt != null">
            #{record.createAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateAt != null">
            #{record.updateAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            #{record.updateBy,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.paradise.core.example.PmProjectExample" resultType="java.lang.Long">
    select count(*) from pm_project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pm_project
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.projectName != null">
            project_name = #{record.projectName,jdbcType=VARCHAR},
          </if>
          <if test="record.serviceUrl != null">
            service_url = #{record.serviceUrl,jdbcType=VARCHAR},
          </if>
          <if test="record.importance != null">
            importance = #{record.importance,jdbcType=INTEGER},
          </if>
          <if test="record.username != null">
            username = #{record.username,jdbcType=VARCHAR},
          </if>
          <if test="record.password != null">
            `password` = #{record.password,jdbcType=VARCHAR},
          </if>
          <if test="record.statusCode != null">
            status_code = #{record.statusCode,jdbcType=INTEGER},
          </if>
          <if test="record.status != null">
            `status` = #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.type != null">
            `type` = #{record.type,jdbcType=VARCHAR},
          </if>
          <if test="record.companyId != null">
            company_id = #{record.companyId,jdbcType=BIGINT},
          </if>
          <if test="record.maxAlert != null">
            max_alert = #{record.maxAlert,jdbcType=INTEGER},
          </if>
          <if test="record.errorCount != null">
            error_count = #{record.errorCount,jdbcType=INTEGER},
          </if>
          <if test="record.startTime != null">
            start_time = #{record.startTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.endTime != null">
            end_time = #{record.endTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.projectInfoLink != null">
            project_info_link = #{record.projectInfoLink,jdbcType=VARCHAR},
          </if>
          <if test="record.createAt != null">
            create_at = #{record.createAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateAt != null">
            update_at = #{record.updateAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pm_project
    set id = #{record.id,jdbcType=BIGINT},
      project_name = #{record.projectName,jdbcType=VARCHAR},
      service_url = #{record.serviceUrl,jdbcType=VARCHAR},
      importance = #{record.importance,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      `password` = #{record.password,jdbcType=VARCHAR},
      status_code = #{record.statusCode,jdbcType=INTEGER},
      `status` = #{record.status,jdbcType=INTEGER},
      `type` = #{record.type,jdbcType=VARCHAR},
      company_id = #{record.companyId,jdbcType=BIGINT},
      max_alert = #{record.maxAlert,jdbcType=INTEGER},
      error_count = #{record.errorCount,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      project_info_link = #{record.projectInfoLink,jdbcType=VARCHAR},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=BIGINT},
      update_by = #{record.updateBy,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update pm_project
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.projectName != null">
            project_name = #{record.projectName,jdbcType=VARCHAR},
          </if>
          <if test="record.serviceUrl != null">
            service_url = #{record.serviceUrl,jdbcType=VARCHAR},
          </if>
          <if test="record.importance != null">
            importance = #{record.importance,jdbcType=INTEGER},
          </if>
          <if test="record.username != null">
            username = #{record.username,jdbcType=VARCHAR},
          </if>
          <if test="record.password != null">
            `password` = #{record.password,jdbcType=VARCHAR},
          </if>
          <if test="record.statusCode != null">
            status_code = #{record.statusCode,jdbcType=INTEGER},
          </if>
          <if test="record.status != null">
            `status` = #{record.status,jdbcType=INTEGER},
          </if>
          <if test="record.type != null">
            `type` = #{record.type,jdbcType=VARCHAR},
          </if>
          <if test="record.companyId != null">
            company_id = #{record.companyId,jdbcType=BIGINT},
          </if>
          <if test="record.maxAlert != null">
            max_alert = #{record.maxAlert,jdbcType=INTEGER},
          </if>
          <if test="record.errorCount != null">
            error_count = #{record.errorCount,jdbcType=INTEGER},
          </if>
          <if test="record.startTime != null">
            start_time = #{record.startTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.endTime != null">
            end_time = #{record.endTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.projectInfoLink != null">
            project_info_link = #{record.projectInfoLink,jdbcType=VARCHAR},
          </if>
          <if test="record.createAt != null">
            create_at = #{record.createAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateAt != null">
            update_at = #{record.updateAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.paradise.core.model.PmProject">
    update pm_project
    set project_name = #{projectName,jdbcType=VARCHAR},
      service_url = #{serviceUrl,jdbcType=VARCHAR},
      importance = #{importance,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      status_code = #{statusCode,jdbcType=INTEGER},
      `status` = #{status,jdbcType=INTEGER},
      `type` = #{type,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=BIGINT},
      max_alert = #{maxAlert,jdbcType=INTEGER},
      error_count = #{errorCount,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      project_info_link = #{projectInfoLink,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.paradise.core.example.PmProjectExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from pm_project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from pm_project
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into pm_project
    (project_name, service_url, importance, username, `password`, status_code, `status`, 
      `type`, company_id, max_alert, error_count, start_time, end_time, remark, project_info_link, 
      create_at, update_at, create_by, update_by)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.projectName,jdbcType=VARCHAR}, #{item.serviceUrl,jdbcType=VARCHAR}, #{item.importance,jdbcType=INTEGER}, 
        #{item.username,jdbcType=VARCHAR}, #{item.password,jdbcType=VARCHAR}, #{item.statusCode,jdbcType=INTEGER}, 
        #{item.status,jdbcType=INTEGER}, #{item.type,jdbcType=VARCHAR}, #{item.companyId,jdbcType=BIGINT}, 
        #{item.maxAlert,jdbcType=INTEGER}, #{item.errorCount,jdbcType=INTEGER}, #{item.startTime,jdbcType=TIMESTAMP}, 
        #{item.endTime,jdbcType=TIMESTAMP}, #{item.remark,jdbcType=VARCHAR}, #{item.projectInfoLink,jdbcType=VARCHAR}, 
        #{item.createAt,jdbcType=TIMESTAMP}, #{item.updateAt,jdbcType=TIMESTAMP}, #{item.createBy,jdbcType=BIGINT}, 
        #{item.updateBy,jdbcType=BIGINT})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into pm_project (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'project_name'.toString() == column.value">
          #{item.projectName,jdbcType=VARCHAR}
        </if>
        <if test="'service_url'.toString() == column.value">
          #{item.serviceUrl,jdbcType=VARCHAR}
        </if>
        <if test="'importance'.toString() == column.value">
          #{item.importance,jdbcType=INTEGER}
        </if>
        <if test="'username'.toString() == column.value">
          #{item.username,jdbcType=VARCHAR}
        </if>
        <if test="'password'.toString() == column.value">
          #{item.password,jdbcType=VARCHAR}
        </if>
        <if test="'status_code'.toString() == column.value">
          #{item.statusCode,jdbcType=INTEGER}
        </if>
        <if test="'status'.toString() == column.value">
          #{item.status,jdbcType=INTEGER}
        </if>
        <if test="'type'.toString() == column.value">
          #{item.type,jdbcType=VARCHAR}
        </if>
        <if test="'company_id'.toString() == column.value">
          #{item.companyId,jdbcType=BIGINT}
        </if>
        <if test="'max_alert'.toString() == column.value">
          #{item.maxAlert,jdbcType=INTEGER}
        </if>
        <if test="'error_count'.toString() == column.value">
          #{item.errorCount,jdbcType=INTEGER}
        </if>
        <if test="'start_time'.toString() == column.value">
          #{item.startTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'end_time'.toString() == column.value">
          #{item.endTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'remark'.toString() == column.value">
          #{item.remark,jdbcType=VARCHAR}
        </if>
        <if test="'project_info_link'.toString() == column.value">
          #{item.projectInfoLink,jdbcType=VARCHAR}
        </if>
        <if test="'create_at'.toString() == column.value">
          #{item.createAt,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_at'.toString() == column.value">
          #{item.updateAt,jdbcType=TIMESTAMP}
        </if>
        <if test="'create_by'.toString() == column.value">
          #{item.createBy,jdbcType=BIGINT}
        </if>
        <if test="'update_by'.toString() == column.value">
          #{item.updateBy,jdbcType=BIGINT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>