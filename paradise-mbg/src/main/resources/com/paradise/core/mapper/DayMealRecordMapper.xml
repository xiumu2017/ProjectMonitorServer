<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.paradise.core.mapper.DayMealRecordMapper">
  <resultMap id="BaseResultMap" type="com.paradise.core.model.DayMealRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="what" jdbcType="VARCHAR" property="what" />
    <result column="place" jdbcType="VARCHAR" property="place" />
    <result column="cost" jdbcType="INTEGER" property="cost" />
    <result column="pay_type" jdbcType="INTEGER" property="payType" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
    <result column="update_by" jdbcType="BIGINT" property="updateBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, `date`, `type`, what, place, cost, pay_type, remark, create_at, update_at, create_by, 
    update_by
  </sql>
  <select id="selectByExample" parameterType="com.paradise.core.example.DayMealRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from day_meal_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from day_meal_record
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from day_meal_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from day_meal_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from day_meal_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.paradise.core.example.DayMealRecordExample">
    delete from day_meal_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.paradise.core.model.DayMealRecord">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into day_meal_record (`date`, `type`, what, 
      place, cost, pay_type, 
      remark, create_at, update_at, 
      create_by, update_by)
    values (#{date,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER}, #{what,jdbcType=VARCHAR}, 
      #{place,jdbcType=VARCHAR}, #{cost,jdbcType=INTEGER}, #{payType,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=BIGINT}, #{updateBy,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="map">
    <selectKey keyProperty="record.id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into day_meal_record
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.date != null">
            `date`,
          </if>
          <if test="record.type != null">
            `type`,
          </if>
          <if test="record.what != null">
            what,
          </if>
          <if test="record.place != null">
            place,
          </if>
          <if test="record.cost != null">
            cost,
          </if>
          <if test="record.payType != null">
            pay_type,
          </if>
          <if test="record.remark != null">
            remark,
          </if>
          <if test="record.createAt != null">
            create_at,
          </if>
          <if test="record.updateAt != null">
            update_at,
          </if>
          <if test="record.createBy != null">
            create_by,
          </if>
          <if test="record.updateBy != null">
            update_by,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.date != null">
            #{record.date,jdbcType=TIMESTAMP},
          </if>
          <if test="record.type != null">
            #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.what != null">
            #{record.what,jdbcType=VARCHAR},
          </if>
          <if test="record.place != null">
            #{record.place,jdbcType=VARCHAR},
          </if>
          <if test="record.cost != null">
            #{record.cost,jdbcType=INTEGER},
          </if>
          <if test="record.payType != null">
            #{record.payType,jdbcType=INTEGER},
          </if>
          <if test="record.remark != null">
            #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.createAt != null">
            #{record.createAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateAt != null">
            #{record.updateAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            #{record.updateBy,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.paradise.core.example.DayMealRecordExample" resultType="java.lang.Long">
    select count(*) from day_meal_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update day_meal_record
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.date != null">
            `date` = #{record.date,jdbcType=TIMESTAMP},
          </if>
          <if test="record.type != null">
            `type` = #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.what != null">
            what = #{record.what,jdbcType=VARCHAR},
          </if>
          <if test="record.place != null">
            place = #{record.place,jdbcType=VARCHAR},
          </if>
          <if test="record.cost != null">
            cost = #{record.cost,jdbcType=INTEGER},
          </if>
          <if test="record.payType != null">
            pay_type = #{record.payType,jdbcType=INTEGER},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.createAt != null">
            create_at = #{record.createAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateAt != null">
            update_at = #{record.updateAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update day_meal_record
    set id = #{record.id,jdbcType=BIGINT},
      `date` = #{record.date,jdbcType=TIMESTAMP},
      `type` = #{record.type,jdbcType=INTEGER},
      what = #{record.what,jdbcType=VARCHAR},
      place = #{record.place,jdbcType=VARCHAR},
      cost = #{record.cost,jdbcType=INTEGER},
      pay_type = #{record.payType,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=BIGINT},
      update_by = #{record.updateBy,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update day_meal_record
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.date != null">
            `date` = #{record.date,jdbcType=TIMESTAMP},
          </if>
          <if test="record.type != null">
            `type` = #{record.type,jdbcType=INTEGER},
          </if>
          <if test="record.what != null">
            what = #{record.what,jdbcType=VARCHAR},
          </if>
          <if test="record.place != null">
            place = #{record.place,jdbcType=VARCHAR},
          </if>
          <if test="record.cost != null">
            cost = #{record.cost,jdbcType=INTEGER},
          </if>
          <if test="record.payType != null">
            pay_type = #{record.payType,jdbcType=INTEGER},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.createAt != null">
            create_at = #{record.createAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateAt != null">
            update_at = #{record.updateAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=BIGINT},
          </if>
          <if test="record.updateBy != null">
            update_by = #{record.updateBy,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.paradise.core.model.DayMealRecord">
    update day_meal_record
    set `date` = #{date,jdbcType=TIMESTAMP},
      `type` = #{type,jdbcType=INTEGER},
      what = #{what,jdbcType=VARCHAR},
      place = #{place,jdbcType=VARCHAR},
      cost = #{cost,jdbcType=INTEGER},
      pay_type = #{payType,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.paradise.core.example.DayMealRecordExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from day_meal_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from day_meal_record
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into day_meal_record
    (`date`, `type`, what, place, cost, pay_type, remark, create_at, update_at, create_by, 
      update_by)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.date,jdbcType=TIMESTAMP}, #{item.type,jdbcType=INTEGER}, #{item.what,jdbcType=VARCHAR}, 
        #{item.place,jdbcType=VARCHAR}, #{item.cost,jdbcType=INTEGER}, #{item.payType,jdbcType=INTEGER}, 
        #{item.remark,jdbcType=VARCHAR}, #{item.createAt,jdbcType=TIMESTAMP}, #{item.updateAt,jdbcType=TIMESTAMP}, 
        #{item.createBy,jdbcType=BIGINT}, #{item.updateBy,jdbcType=BIGINT})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into day_meal_record (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'date'.toString() == column.value">
          #{item.date,jdbcType=TIMESTAMP}
        </if>
        <if test="'type'.toString() == column.value">
          #{item.type,jdbcType=INTEGER}
        </if>
        <if test="'what'.toString() == column.value">
          #{item.what,jdbcType=VARCHAR}
        </if>
        <if test="'place'.toString() == column.value">
          #{item.place,jdbcType=VARCHAR}
        </if>
        <if test="'cost'.toString() == column.value">
          #{item.cost,jdbcType=INTEGER}
        </if>
        <if test="'pay_type'.toString() == column.value">
          #{item.payType,jdbcType=INTEGER}
        </if>
        <if test="'remark'.toString() == column.value">
          #{item.remark,jdbcType=VARCHAR}
        </if>
        <if test="'create_at'.toString() == column.value">
          #{item.createAt,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_at'.toString() == column.value">
          #{item.updateAt,jdbcType=TIMESTAMP}
        </if>
        <if test="'create_by'.toString() == column.value">
          #{item.createBy,jdbcType=BIGINT}
        </if>
        <if test="'update_by'.toString() == column.value">
          #{item.updateBy,jdbcType=BIGINT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>