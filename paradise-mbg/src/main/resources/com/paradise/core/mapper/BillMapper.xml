<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.paradise.core.mapper.BillMapper">
  <resultMap id="BaseResultMap" type="com.paradise.core.model.Bill">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="direction" jdbcType="INTEGER" property="direction" />
    <result column="type_id" jdbcType="BIGINT" property="typeId" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="date" jdbcType="TIMESTAMP" property="date" />
    <result column="deleted" jdbcType="INTEGER" property="deleted" />
    <result column="labels" jdbcType="VARCHAR" property="labels" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_at" jdbcType="TIMESTAMP" property="createAt" />
    <result column="update_at" jdbcType="TIMESTAMP" property="updateAt" />
    <result column="create_by" jdbcType="BIGINT" property="createBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, direction, type_id, amount, `name`, `date`, deleted, labels, remark, create_at, 
    update_at, create_by
  </sql>
  <select id="selectByExample" parameterType="com.paradise.core.example.BillExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from f_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from f_bill
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from f_bill
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from f_bill
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from f_bill
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.paradise.core.example.BillExample">
    delete from f_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.paradise.core.model.Bill">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into f_bill (direction, type_id, amount, 
      `name`, `date`, deleted, 
      labels, remark, create_at, 
      update_at, create_by)
    values (#{direction,jdbcType=INTEGER}, #{typeId,jdbcType=BIGINT}, #{amount,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{date,jdbcType=TIMESTAMP}, #{deleted,jdbcType=INTEGER}, 
      #{labels,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, 
      #{updateAt,jdbcType=TIMESTAMP}, #{createBy,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="map">
    <selectKey keyProperty="record.id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into f_bill
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.direction != null">
            direction,
          </if>
          <if test="record.typeId != null">
            type_id,
          </if>
          <if test="record.amount != null">
            amount,
          </if>
          <if test="record.name != null">
            `name`,
          </if>
          <if test="record.date != null">
            `date`,
          </if>
          <if test="record.deleted != null">
            deleted,
          </if>
          <if test="record.labels != null">
            labels,
          </if>
          <if test="record.remark != null">
            remark,
          </if>
          <if test="record.createAt != null">
            create_at,
          </if>
          <if test="record.updateAt != null">
            update_at,
          </if>
          <if test="record.createBy != null">
            create_by,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.direction != null">
            #{record.direction,jdbcType=INTEGER},
          </if>
          <if test="record.typeId != null">
            #{record.typeId,jdbcType=BIGINT},
          </if>
          <if test="record.amount != null">
            #{record.amount,jdbcType=INTEGER},
          </if>
          <if test="record.name != null">
            #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.date != null">
            #{record.date,jdbcType=TIMESTAMP},
          </if>
          <if test="record.deleted != null">
            #{record.deleted,jdbcType=INTEGER},
          </if>
          <if test="record.labels != null">
            #{record.labels,jdbcType=VARCHAR},
          </if>
          <if test="record.remark != null">
            #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.createAt != null">
            #{record.createAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateAt != null">
            #{record.updateAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            #{record.createBy,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.paradise.core.example.BillExample" resultType="java.lang.Long">
    select count(*) from f_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update f_bill
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=BIGINT},
          </if>
          <if test="record.direction != null">
            direction = #{record.direction,jdbcType=INTEGER},
          </if>
          <if test="record.typeId != null">
            type_id = #{record.typeId,jdbcType=BIGINT},
          </if>
          <if test="record.amount != null">
            amount = #{record.amount,jdbcType=INTEGER},
          </if>
          <if test="record.name != null">
            `name` = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.date != null">
            `date` = #{record.date,jdbcType=TIMESTAMP},
          </if>
          <if test="record.deleted != null">
            deleted = #{record.deleted,jdbcType=INTEGER},
          </if>
          <if test="record.labels != null">
            labels = #{record.labels,jdbcType=VARCHAR},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.createAt != null">
            create_at = #{record.createAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateAt != null">
            update_at = #{record.updateAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update f_bill
    set id = #{record.id,jdbcType=BIGINT},
      direction = #{record.direction,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      `date` = #{record.date,jdbcType=TIMESTAMP},
      deleted = #{record.deleted,jdbcType=INTEGER},
      labels = #{record.labels,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_at = #{record.createAt,jdbcType=TIMESTAMP},
      update_at = #{record.updateAt,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update f_bill
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.direction != null">
            direction = #{record.direction,jdbcType=INTEGER},
          </if>
          <if test="record.typeId != null">
            type_id = #{record.typeId,jdbcType=BIGINT},
          </if>
          <if test="record.amount != null">
            amount = #{record.amount,jdbcType=INTEGER},
          </if>
          <if test="record.name != null">
            `name` = #{record.name,jdbcType=VARCHAR},
          </if>
          <if test="record.date != null">
            `date` = #{record.date,jdbcType=TIMESTAMP},
          </if>
          <if test="record.deleted != null">
            deleted = #{record.deleted,jdbcType=INTEGER},
          </if>
          <if test="record.labels != null">
            labels = #{record.labels,jdbcType=VARCHAR},
          </if>
          <if test="record.remark != null">
            remark = #{record.remark,jdbcType=VARCHAR},
          </if>
          <if test="record.createAt != null">
            create_at = #{record.createAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateAt != null">
            update_at = #{record.updateAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.createBy != null">
            create_by = #{record.createBy,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.paradise.core.model.Bill">
    update f_bill
    set direction = #{direction,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=BIGINT},
      amount = #{amount,jdbcType=INTEGER},
      `name` = #{name,jdbcType=VARCHAR},
      `date` = #{date,jdbcType=TIMESTAMP},
      deleted = #{deleted,jdbcType=INTEGER},
      labels = #{labels,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectOneByExample" parameterType="com.paradise.core.example.BillExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from f_bill
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from f_bill
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    insert into f_bill
    (direction, type_id, amount, `name`, `date`, deleted, labels, remark, create_at, 
      update_at, create_by)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.direction,jdbcType=INTEGER}, #{item.typeId,jdbcType=BIGINT}, #{item.amount,jdbcType=INTEGER}, 
        #{item.name,jdbcType=VARCHAR}, #{item.date,jdbcType=TIMESTAMP}, #{item.deleted,jdbcType=INTEGER}, 
        #{item.labels,jdbcType=VARCHAR}, #{item.remark,jdbcType=VARCHAR}, #{item.createAt,jdbcType=TIMESTAMP}, 
        #{item.updateAt,jdbcType=TIMESTAMP}, #{item.createBy,jdbcType=BIGINT})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" keyColumn="id" keyProperty="list.id" parameterType="map" useGeneratedKeys="true">
    insert into f_bill (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'direction'.toString() == column.value">
          #{item.direction,jdbcType=INTEGER}
        </if>
        <if test="'type_id'.toString() == column.value">
          #{item.typeId,jdbcType=BIGINT}
        </if>
        <if test="'amount'.toString() == column.value">
          #{item.amount,jdbcType=INTEGER}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'date'.toString() == column.value">
          #{item.date,jdbcType=TIMESTAMP}
        </if>
        <if test="'deleted'.toString() == column.value">
          #{item.deleted,jdbcType=INTEGER}
        </if>
        <if test="'labels'.toString() == column.value">
          #{item.labels,jdbcType=VARCHAR}
        </if>
        <if test="'remark'.toString() == column.value">
          #{item.remark,jdbcType=VARCHAR}
        </if>
        <if test="'create_at'.toString() == column.value">
          #{item.createAt,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_at'.toString() == column.value">
          #{item.updateAt,jdbcType=TIMESTAMP}
        </if>
        <if test="'create_by'.toString() == column.value">
          #{item.createBy,jdbcType=BIGINT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>